from random import randint
gravitational_constant = 6.67408E-11
"""Гравитационная постоянная Ньютона G"""
class Star():
    """Тип данных, описывающий звезду.
    Содержит массу, координаты, скорость звезды,
    а также визуальный радиус звезды в пикселах и её цвет.
    """
    def __init__(self, m, x, y, Vx = 0, Vy = 0, color = "red", R = 5):
        self.type = "star"
        self.m = m  
        self.x = x  
        self.y = y 
        self.Vx = Vx 
        self.Vy = Vy  
        self.Fx = 0  
        self.Fy = 0  
        self.R = R  
        self.color = color 
class Planet():
    """Тип данных, описывающий планету.
    Содержит массу, координаты, скорость планеты,
    а также визуальный радиус планеты в пикселах и её цвет
    """
    def __init__(self, m, x, y, Vx = 0, Vy = 0, color = "green", R = 5):
        self.type = "planet"
        self.m = m  
        self.x = x  
        self.y = y  
        self.Vx = Vx  
        self.Vy = Vy  
        self.Fx = 0  
        self.Fy = 0  
        self.R = R  
        self.color = color
        self.image = None
def calculate_force(body, space_objects):
    """Вычисляет силу, действующую на тело.
    Параметры:
    **body** — тело, для которого нужно вычислить дейстующую силу.
    **space_objects** — список объектов, которые воздействуют на тело.    """
    body.Fx = body.Fy = 0
    for obj in space_objects:
        if body == obj:
            continue
        dx = obj.x - body.x
        dy = obj.y - body.y
        distance = (dx**2 + dy**2)**0.5
        if distance == 0:
            continue 
        force = gravitational_constant * body.m * obj.m / distance**2
        body.Fx += force * (dx / distance) 
        body.Fy += force * (dy / distance) 
def move_space_object(body, dt):
    """Перемещает тело в соответствии с действующей на него силой.
    Параметры:
    **body** — тело, которое нужно переместить.
    """
    ax = body.Fx / body.m  
    ay = body.Fy / body.m 
    body.Vx += ax * dt
    body.Vy += ay * dt
    body.x += body.Vx * dt
    body.y += body.Vy * dt
def recalculate_space_objects_positions(space_objects, dt):
    """Пересчитывает координаты объектов.
    Параметры:
    **space_objects** — список oбъектов, для которых нужно пересчитать координаты.
    **dt** — шаг по времени
    """
    for body in space_objects:
        calculate_force(body, space_objects)
    for body in space_objects:
        move_space_object(body, dt)
if __name__ == "__main__":
    print("This module is not for direct call!")
